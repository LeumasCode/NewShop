{"version":3,"sources":["components/Footer.js","constants/orderConstants.js","constants/userConstants.js","actions/userActions.js","screens/SearchBox.js","components/Header.js","components/Message.js","constants/cartConstants.js","actions/cartActions.js","screens/CartScreen.js","components/Rating.js","components/Product.js","constants/productConstants.js","actions/productActions.js","components/Loader.js","components/Paginate.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/OrderListScreen.js","actions/orderActions.js","components/Flutterwave.js","screens/OrderScreen.js","components/CheckoutSteps.js","screens/paymentScreen.js","screens/PlaceorderScreen.js","screens/ProductEditScreen.js","screens/ProductListScreen.js","screens/ProductScreen.js","screens/ProfileScreen.js","screens/RegisterScreen.js","screens/ShippingScreen.js","screens/UserEditScreen.js","screens/UserListScreen.js","App.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","index.js"],"names":["Footer","Container","Row","Col","className","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","getUserDetails","id","dispatch","getState","a","userInfo","userLogin","type","config","headers","Authorization","token","axios","get","data","payload","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","Button","variant","Header","useDispatch","useSelector","state","Navbar","bg","expand","collapseOnSelect","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","localStorage","removeItem","isAdmin","Message","children","Alert","defaultProps","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","addToCart","qty","product","_id","image","price","countInStock","setItem","JSON","stringify","cart","cartItems","CartScreen","match","location","productId","params","search","Number","split","useEffect","removeFromCartHandler","removeFromCart","md","length","ListGroup","map","item","Image","src","alt","fluid","rounded","as","Array","keys","x","Card","reduce","acc","toFixed","disabled","Rating","text","color","style","Product","Img","Body","Title","Text","rating","numReviews","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","listProducts","pageNumber","listProductDetails","createProduct","post","Loader","Spinner","animation","role","width","height","margin","display","Paginate","pages","page","Pagination","active","ProductCarousel","productTopRated","error","loading","products","Carousel","pause","Caption","Meta","description","keywords","Helmet","content","HomeScreen","pageNmuber","productList","sm","lg","xl","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","Group","Label","OrderListScreen","orderList","orders","Table","striped","bordered","hover","responsive","order","user","createdAt","substring","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","App","orderId","userName","userEmail","amount","flutterId","setFlutterId","publicId","getPublicId","public_key","tx_ref","Date","now","currency","payment_options","customer","phonenumber","customizations","logo","handleFlutterPayment","useFlutterwave","padding","border","backgroundColor","boxSizing","textTransform","fontWeight","textAlign","transition","callback","paymentResult","put","payOrder","closePaymentModal","status","window","reload","onClose","OrderScreen","num","orderDetails","orderPay","successPay","success","loadingPay","orderDeliver","successDeliver","loadingDeliver","itemsPrice","orderItems","Math","round","href","shippingAddress","address","city","postalCode","country","paymentMethod","index","shippingPrice","taxPrice","deliverOrder","CheckoutSteps","step1","step2","step3","step4","PaymentScreen","setPaymentMethod","savePaymentMethod","controlId","Check","label","checked","PlaceorderScreen","orderCreate","addDecimals","createOrder","ProductEditScreen","setName","setPrice","setImage","brand","setBrand","category","setCategory","setCountInStock","setDescription","uploading","setUploading","productDetails","productUpdate","loadingUpdate","errorUpdate","successUpdate","uploadFileHandler","file","files","formData","FormData","append","console","updateProduct","File","custom","ProductListScreen","productCreate","successCreate","errorCreate","loadingCreate","createdProduct","productDelete","successDelete","loadingDelete","errorDelete","deleteHandler","confirm","delete","ProductScreen","setQty","setRating","comment","setComment","productCreateReview","errorProductReview","successProductReview","alert","reviews","review","rows","ProfileScreen","confirmPassword","setConfirmPassword","setMessage","userDetails","userUpdateProfile","orderListMy","loadingOrders","log","updateUserProfile","RegisterScreen","userRegister","register","ShippingScreen","setAddress","setCity","setPostalCode","setCountry","required","UserEditScreen","userId","setIsAdmin","userUpdate","updateUser","UserListScreen","userList","users","userDelete","path","component","exact","reducer","combineReducers","action","existItem","find","filter","cartItemsFromStorage","getItem","parse","userInfoFromStorage","initialState","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7d5aae7c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className=\"text-center py-3\">Copyright &copy; NewShop</Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","// ACTION FOR ORDERS\nexport const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST \";\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\";\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\";\n\n// ACTION FOR ORDERS\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST \";\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\";\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\";\n\n// ACTION FOR ORDERS\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST \";\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\";\nexport const ORDER_PAY_FAIL = \"ORDER_PAY_FAIL\";\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\";\n\n// ACTION FOR ORDERS\nexport const ORDER_LIST_MY_REQUEST = \"ORDER_LIST_MY_REQUEST \";\nexport const ORDER_LIST_MY_SUCCESS = \"ORDER_LIST_MY_SUCCESS\";\nexport const ORDER_LIST_MY_FAIL = \"ORDER_LIST_MY_FAIL\";\nexport const ORDER_LIST_MY_RESET = \"ORDER_LIST_MY_RESET\";\n\n// ACTION FOR ORDERS\nexport const ORDER_LIST_REQUEST = \"ORDER_LIST_REQUEST \";\nexport const ORDER_LIST_SUCCESS = \"ORDER_LIST_SUCCESS\";\nexport const ORDER_LIST_FAIL = \"ORDER_LIST_FAIL\";\n\n// ACTION FOR ORDERS\nexport const ORDER_DELIVER_REQUEST = \"ORDER_DELIVER_REQUEST \";\nexport const ORDER_DELIVER_SUCCESS = \"ORDER_DELIVER_SUCCESS\";\nexport const ORDER_DELIVER_FAIL = \"ORDER_DELIVER_FAIL\";\nexport const ORDER_DELIVER_RESET = \"ORDER_DELIVER_RESET\";\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n\n\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\n\n\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\n\n\n\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\";\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\";\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\";\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\";\n\n\n\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\";\nexport const USER_LIST_RESET = \"USER_LIST_RESET\";\n\n\n\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\";\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\n\n\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\";\n","import axios from \"axios\";\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\nimport {\n  USER_DELETE_FAIL,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_RESET,\n  USER_DETAILS_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_LIST_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n} from \"../constants/userConstants\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    // 1) Dispatch the request\n    dispatch({ type: USER_LOGIN_REQUEST });\n\n    // 2) Make api request\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const { data } = await axios.post(\n      \"/api/users/login\",\n      { email, password },\n      config\n    );\n\n    // 3) If request is successful, dispatch the success\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    // 4) save user to localStorage\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      // if error\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    // 1) Dispatch the request\n    dispatch({ type: USER_REGISTER_REQUEST });\n\n    // 2) Make api request\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const { data } = await axios.post(\n      \"/api/users\",\n      { name, email, password },\n      config\n    );\n\n    // 3) If request is successful, dispatch the success\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n\n    // log the user in immediately\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    // 4) save user to localStorage\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      // if error\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    const { userInfo } = getState().userLogin;\n    // 1) Dispatch the request\n    dispatch({ type: USER_DETAILS_REQUEST });\n\n    // 2) Make api request\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/users/${id}`, config);\n\n    // 3) If request is successful, dispatch the success\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      // if error\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    const { userInfo } = getState().userLogin;\n    // 1) Dispatch the request\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST });\n    console.log(userInfo);\n\n    // 2) Make api request\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.put(`/api/users/profile`, user, config);\n\n    // 3) If request is successful, dispatch the success\n    dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      // if error\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    const { userInfo } = getState().userLogin;\n    // 1) Dispatch the request\n    dispatch({ type: USER_LIST_REQUEST });\n\n    // 2) Make api request\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/users`, config);\n\n    // 3) If request is successful, dispatch the success\n    dispatch({ type: USER_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      // if error\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    const { userInfo } = getState().userLogin;\n    // 1) Dispatch the request\n    dispatch({ type: USER_DELETE_REQUEST });\n\n    // 2) Make api request\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    await axios.delete(`/api/users/${id}`, config);\n\n    // 3) If request is successful, dispatch the success\n    dispatch({ type: USER_DELETE_SUCCESS });\n  } catch (error) {\n    dispatch({\n      // if error\n      type: USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    const { userInfo } = getState().userLogin;\n    // 1) Dispatch the request\n    dispatch({ type: USER_UPDATE_REQUEST });\n\n    // 2) Make api request\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\n\n    // 3) If request is successful, dispatch the success\n    dispatch({ type: USER_UPDATE_SUCCESS });\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      // if error\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({ type: USER_LOGOUT });\n  dispatch({ type: USER_DETAILS_RESET });\n  dispatch({ type: ORDER_LIST_MY_RESET });\n  dispatch({ type: USER_LIST_RESET });\n};\n","import React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\n\nconst SearchBox = ({history}) => {\n  const [keyword, setKeyword] = useState(\"\");\n\n  const submitHandler = (e) =>{\n      e.preventDefault()\n      if(keyword.trim()){\n          history.push(`/search/${keyword}`)\n      }else{\n          history.push('/')\n      }\n  }\n\n  return (\n    <Form onSubmit={submitHandler} inline>\n      <Form.Control\n        name=\"q\"\n        type=\"text\"\n        onChange={(e) => setKeyword(e.target.value)}\n        placeholder=\"Search Products...\" className='mr-sm-2 ml-sm-5'\n      ></Form.Control>\n      <Button className=\"p-2\" type='submit' variant='outline-success'>Search</Button>\n    </Form>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Nav, Navbar, Container, NavDropdown } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport {logout} from '../actions/userActions'\nimport { Route } from \"react-router-dom\";\nimport SearchBox from \"../screens/SearchBox\";\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const { userInfo } = useSelector((state) => state.userLogin);\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  };\n\n  return (\n    <header>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n        <Container>\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>New Shop</Navbar.Brand>\n          </LinkContainer>\n\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n\n          {/* searchBox */}\n          <Route render={({history})=> <SearchBox history={history}/>} />\n\n            <Nav className=\"ml-auto\">\n              <LinkContainer to=\"/cart\">\n                <Nav.Link>\n                  <i className=\"fas fa-shopping-cart\"></i> Cart\n                </Nav.Link>\n              </LinkContainer>\n\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id=\"username\">\n                  <LinkContainer to=\"/profile\">\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to=\"/login\">\n                  <Nav.Link>\n                    <i className=\"fas fa-user\"></i> Sign In\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title=\"Admin\" id=\"adminmenu\">\n                  <LinkContainer to=\"/admin/userlist\">\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n\n                  <LinkContainer to=\"/admin/productlist\">\n                    <NavDropdown.Item>Products</NavDropdown.Item>\n                  </LinkContainer>\n\n                  <LinkContainer to=\"/admin/orderlist\">\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>;\n};\n\nMessage.defaultProps ={\n    variant: 'info'\n}\n\n\nexport default Message;\n","export const CART_ADD_ITEM = \"CART_ADD_ITEM\";\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\n\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\";\n\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\";\n\n","import axios from \"axios\";\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_SAVE_SHIPPING_ADDRESS,\n} from \"../constants/cartConstants\";\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`);\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  });\n\n  // save it in localStorage\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\nexport const removeFromCart = (id) => async (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  });\n\n  // save it in localStorage\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  });\n\n  // save it in localStorage\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\n};\n\nexport const savePaymentMethod = (paymentMethod) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: paymentMethod,\n  });\n\n  // save it in localStorage\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(paymentMethod));\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  ListGroup,\n  Card,\n  Image,\n  Form,\n  Button,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Message from \"../components/Message\";\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\n\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id;\n\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1; //get the queryString\n\n\n  const dispatch = useDispatch();\n\n  const cartItems = useSelector((state) => state.cart.cartItems);\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [productId, dispatch, qty]);\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id))\n  };\n\n  const checkoutHandler = ()=>{\n      history.push('/login?redirect=shipping')\n  }\n\n  return (\n    <Row>\n      {/* first column */}\n      <Col md={8}>\n        <h1>Shopping Cart</h1>\n        {/* check to see if anything is in the cart */}\n\n        {cartItems.length === 0 ? (\n          <Message>\n            Your cart is empty <Link to=\"/\">Go Back</Link>\n          </Message>\n        ) : (\n          <ListGroup variant=\"flush\">\n            {cartItems.map((item) => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/product/${item.product}`}> {item.name}</Link>\n                  </Col>\n                  <Col md={2}>₦{item.price}</Col>\n\n                  <Col md={2}>\n                    <Form.Control\n                      value={item.qty}\n                      as=\"select\"\n                      onChange={(e) =>\n                        dispatch(\n                          addToCart(item.product, Number(e.target.value))\n                        )\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map((x) => (\n                        <option key={x + 1} value={x + 1}>\n                          {\" \"}\n                          {x + 1}{\" \"}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                  <Col md={2}>\n                    <Button\n                      type=\"button\"\n                      variant=\"light\"\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n\n      {/* second column */}\n      <Col md={4}>\n        <Card>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                items\n              </h2>\n              ₦\n              {cartItems\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\n                .toFixed(2)}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <Button\n                type=\"button\"\n                className=\"btn-block\"\n                disabled={cartItems.length === 0}\n                onClick={checkoutHandler}\n              >\n                Proceed to Checkout\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default CartScreen;\n","import React from \"react\";\nimport PropTypes from 'prop-types'\n\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? \"fas fa-star\"\n              : value >= 0.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? \"fas fa-star\"\n              : value >= 1.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? \"fas fa-star\"\n              : value >= 2.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? \"fas fa-star\"\n              : value >= 3.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? \"fas fa-star\"\n              : value >= 4.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span className=\"ml-1\">{text && text}</span>\n    </div>\n  );\n};\n\nRating.defaultProps = {\n  color: \"#f8e825\",\n};\n\nRating.propTypes = {\n  value: PropTypes.number.isRequired,\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Rating;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Rating from \"./Rating\";\n\nconst Product = ({ product }) => {\n  //getting the product from the homeScreen.js\n  return (\n    <Card className=\"my-3 p-3 rounded\">\n      <Link to={`/product/${product._id}`}>\n        <Card.Img src={product.image} variant=\"top\" />\n      </Link>\n\n      <Card.Body>\n        <Link to={`/product/${product._id}`}>\n          <Card.Title as=\"div\">\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n\n        <Card.Text as=\"div\">\n          <Rating\n            value={product.rating}\n            text={`${product.numReviews} reviews`}\n          />\n        </Card.Text>\n\n        <Card.Text as=\"h3\">₦{product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Product;\n","// ACTION FOR GETTING ALL PRODUCTS\nexport const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\";\n\n// ACTIONS FOR GETTING A SINGLE PRODUCTS\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\";\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\";\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\";\n\n// ACTIONS FOR GETTING A SINGLE PRODUCTS\nexport const PRODUCT_DELETE_REQUEST = \"PRODUCT_DELETE_REQUEST\";\nexport const PRODUCT_DELETE_SUCCESS = \"PRODUCT_DELETE_SUCCESS\";\nexport const PRODUCT_DELETE_FAIL = \"PRODUCT_DELETE_FAIL\";\n\n// ACTIONS FOR GETTING A SINGLE PRODUCTS\nexport const PRODUCT_CREATE_REQUEST = \"PRODUCT_CREATE_REQUEST\";\nexport const PRODUCT_CREATE_SUCCESS = \"PRODUCT_CREATE_SUCCESS\";\nexport const PRODUCT_CREATE_FAIL = \"PRODUCT_CREATE_FAIL\";\nexport const PRODUCT_CREATE_RESET = \"PRODUCT_CREATE_RESET\";\n\n\n// ACTIONS FOR GETTING A SINGLE PRODUCTS\nexport const PRODUCT_UPDATE_REQUEST = \"PRODUCT_UPDATE_REQUEST\";\nexport const PRODUCT_UPDATE_SUCCESS = \"PRODUCT_UPDATE_SUCCESS\";\nexport const PRODUCT_UPDATE_FAIL = \"PRODUCT_UPDATE_FAIL\";\nexport const PRODUCT_UPDATE_RESET = \"PRODUCT_UPDATE_RESET\";\n\n\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = \"PRODUCT_CREATE_REVIEW_REQUEST\";\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = \"PRODUCT_CREATE_REVIEW_SUCCESS\";\nexport const PRODUCT_CREATE_REVIEW_FAIL = \"PRODUCT_CREATE_REVIEW_FAIL\";\nexport const PRODUCT_CREATE_REVIEW_RESET = \"PRODUCT_CREATE_REVIEW_RESET\";\n\n\nexport const PRODUCT_TOP_REQUEST = \"PRODUCT_TOP_REQUEST\";\nexport const PRODUCT_TOP_SUCCESS = \"PRODUCT_TOP_SUCCESS\";\nexport const PRODUCT_TOP_FAIL = \"PRODUCT_TOP_FAIL\";","import axios from \"axios\";\nimport {\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_TOP_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n} from \"../constants/productConstants\";\n\nexport const listProducts = (keyword = \"\", pageNumber = \"\") => async (\n  dispatch\n) => {\n  try {\n    // dispatch the request action first\n    dispatch({ type: PRODUCT_LIST_REQUEST });\n\n    // Make the request\n    const { data } = await axios.get(\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n    );\n\n    // If successful dispatch success\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    // if it fails dispatch fail\n\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    // DISPATCH THE REQUEST\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\n\n    // GET A SINGLE PRODUCT FROM ID\n    const { data } = await axios.get(`/api/products/${id}`);\n\n    // if successful, dispatch success\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    //if error\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    const { userInfo } = getState().userLogin;\n    // DISPATCH THE REQUEST\n    dispatch({ type: PRODUCT_DELETE_REQUEST });\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    // DELETE A SINGLE PRODUCT delete ID\n    await axios.delete(`/api/products/${id}`, config);\n\n    // if successful, dispatch success\n    dispatch({ type: PRODUCT_DELETE_SUCCESS });\n  } catch (error) {\n    //if error\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    const { userInfo } = getState().userLogin;\n    // DISPATCH THE REQUEST\n    dispatch({ type: PRODUCT_CREATE_REQUEST });\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    // CREATE A SINGLE PRODUCT\n    const { data } = await axios.post(`/api/products`, {}, config);\n\n    // if successful, dispatch success\n    dispatch({ type: PRODUCT_CREATE_SUCCESS, payload: data });\n  } catch (error) {\n    //if error\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    const { userInfo } = getState().userLogin;\n    // DISPATCH THE REQUEST\n    dispatch({ type: PRODUCT_UPDATE_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    // UPDATE A SINGLE PRODUCT\n    const { data } = await axios.put(\n      `/api/products/${product._id}`,\n      product,\n      config\n    );\n\n    // if successful, dispatch success\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\n  } catch (error) {\n    //if error\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const createProductReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    const { userInfo } = getState().userLogin;\n    // DISPATCH THE REQUEST\n    dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    // CREATE_REVIEW A SINGLE PRODUCT\n    await axios.post(`/api/products/${productId}/reviews`, review, config);\n\n    // if successful, dispatch success\n    dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS });\n  } catch (error) {\n    //if error\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listTopProducts = () => async (dispatch) => {\n  try {\n    // DISPATCH THE REQUEST\n    dispatch({ type: PRODUCT_TOP_REQUEST });\n\n    // TOP A SINGLE PRODUCT\n    const { data } = await axios.get(`/api/products/top`);\n\n    // if successful, dispatch success\n    dispatch({ type: PRODUCT_TOP_SUCCESS, payload: data });\n  } catch (error) {\n    //if error\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation=\"border\"\n      role=\"status\"\n      style={{\n        width: \"100px\",\n        height: \"100px\",\n        margin: \"auto\",\n        display: \"block\",\n      }}\n    >\n        <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst Paginate = ({ pages, page, isAdmin = false, keyword = \"\" }) => {\n  return (\n    pages > 1 && (\n      <Pagination>\n        {[...Array(pages).keys()].map((x) => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isAdmin\n                ? keyword\n                  ? `/search/${keyword}/page/${x + 1}`\n                  : `/page/${x + 1}`\n                : `/admin/productlist/${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  );\n};\n\nexport default Paginate;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Carousel, Image } from \"react-bootstrap\";\nimport Loader from \"./Loader\";\nimport Message from \"./Message\";\nimport { listTopProducts } from \"../actions/productActions\";\n\nconst ProductCarousel = () => {\n  const dispatch = useDispatch();\n  const { error, loading, products } = useSelector(\n    (state) => state.productTopRated\n  );\n\n  useEffect(() => {\n    dispatch(listTopProducts());\n  }, [dispatch]);\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <Carousel pause=\"hover\" className=\"bg-dark\">\n      {products.map((product) => (\n        <Carousel.Item key={product._id}>\n          <Link to={`/product/${product._id}`}>\n            <Image src={product.image} alt={product.name} fluid />\n            <Carousel.Caption className=\"carousel-caption\">\n              <h2>\n                {product.name} (₦{product.price})\n              </h2>\n            </Carousel.Caption>\n          </Link>\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  );\n};\n\nexport default ProductCarousel;\n","import React from 'react'\nimport { Helmet } from \"react-helmet\";\n\nconst Meta = ({title, description, keywords}) => {\n    return (\n        <Helmet>\n            <title>{title}</title>\n            <meta name='description' content={description} />\n            <meta name='keyword' content={keywords} />\n        </Helmet>\n    )\n}\n\nMeta.defaultProps = {\n  title: \"Welcome to ProShop\",\n  keywords: \"electronics, buy electronics, cheap electronics\",\n  description: 'We sell best products for cheap'\n};\n\nexport default Meta\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Product from \"../components/Product\";\nimport { listProducts } from \"../actions/productActions\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport Paginate from \"../components/Paginate\";\nimport ProductCarousel from \"../components/ProductCarousel\";\nimport Meta from \"../components/Meta\";\n\nconst HomeScreen = ({ match }) => {\n  const keyword = match.params.keyword;\n\n  const pageNmuber = match.params.pageNumber || 1;\n\n  const { loading, error, products, page, pages } = useSelector(\n    (state) => state.productList\n  ); // get the loading, error, product from the state\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNmuber));\n  }, [dispatch, keyword, pageNmuber]);\n\n  return (\n    <>\n      <Meta />\n      {!keyword ? (\n        <ProductCarousel />\n      ) : (\n        <Link to=\"/\" className=\"btn btn-light\">\n          Go Back\n        </Link>\n      )}\n      <h1>Latest Product</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Row>\n            {products.map((product) => {\n              // looping through the products and passing it as props into the product component\n              return (\n                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                  <Product product={product} />\n                </Col>\n              );\n            })}\n          </Row>\n\n          <Paginate\n            pages={pages}\n            page={page}\n            keyword={keyword ? keyword : \"\"}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default HomeScreen;\n","import React from 'react'\nimport { Row, Col, Container } from 'react-bootstrap';\n\nconst FormContainer = ({children}) => {\n    return (\n        <Container>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport { login } from \"../actions/userActions\";\nimport Loader from \"../components/Loader.js\";\nimport FormContainer from \"../components/FormContainer\";\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const { loading, error, userInfo } = useSelector((state) => state.userLogin);\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  //check if the user is already loggedIn\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, redirect, userInfo]);\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n\n    // DISPATCH LOGIN\n    dispatch(login(email, password));\n  };\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={onSubmitHandler}>\n        <Form.Group>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Sign In\n        </Button>\n      </Form>\n\n      <Row className=\"py-3\">\n        <Col>\n          New Customer?{\" \"}\n          <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default LoginScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport { listOrders } from \"../actions/orderActions\";\nimport Loader from \"../components/Loader.js\";\n\nconst OrderListScreen = ({ history }) => {\n  const dispatch = useDispatch();\n\n  //Bring the user list into the component\n  const { loading, error, orders } = useSelector((state) => state.orderList);\n\n  // Bring the userLogged in into the component\n  const { userInfo } = useSelector((state) => state.userLogin);\n\n\n  // onload of the screen, dispatch the listUser Action\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders());\n    } else {\n      history.push(\"/login\");\n    }\n  }, [dispatch, history, userInfo]);\n\n \n\n  return (\n    <>\n      <h1>Orders</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>\n                  {order.createdAt.substring(0, 10)}\n                </td>\n                <td>\n                  ₦{order.totalPrice}\n                </td>\n                <td>\n                  {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                  ) : (\n                      <i className='fas fa-times' style={{color: 'red'}} />\n                  )}\n                </td>\n\n                 <td>\n                  {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                  ) : (\n                      <i className='fas fa-times' style={{color: 'red'}} />\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      Details\n                    </Button>\n                  </LinkContainer>\n                  \n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n\nexport default OrderListScreen;\n","import axios from \"axios\";\nimport {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n} from \"../constants/orderConstants\";\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    // dispatch the request\n    dispatch({ type: ORDER_CREATE_REQUEST });\n\n    //get the user info\n    const { userInfo } = getState().userLogin;\n\n    // 2) Make api request\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.post(`/api/orders`, order, config);\n\n    // dispatch the success\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      // if error\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    // dispatch the request\n    dispatch({ type: ORDER_DETAILS_REQUEST });\n\n    //get the user info\n    const { userInfo } = getState().userLogin;\n\n    // 2) Make api request\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/orders/${id}`, config);\n\n    // dispatch the success\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      // if error\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const payOrder = (orderId, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    // dispatch the request\n    dispatch({ type: ORDER_PAY_REQUEST });\n\n    //get the user info\n    const { userInfo } = getState().userLogin;\n\n    // 2) Make api request\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    );\n\n    // dispatch the success\n    dispatch({ type: ORDER_PAY_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      // if error\n      type: ORDER_PAY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deliverOrder = (orderId) => async (dispatch, getState) => {\n  try {\n    // dispatch the request\n    dispatch({ type: ORDER_DELIVER_REQUEST });\n\n    //get the user info\n    const { userInfo } = getState().userLogin;\n\n    // 2) Make api request\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    await axios.put(\n      `/api/orders/${orderId}/deliver`,\n      {},\n      config\n    );\n\n    // dispatch the success\n    dispatch({ type: ORDER_DELIVER_SUCCESS });\n  } catch (error) {\n    dispatch({\n      // if error\n      type: ORDER_DELIVER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    // dispatch the request\n    dispatch({ type: ORDER_LIST_MY_REQUEST });\n\n    //get the user info\n    const { userInfo } = getState().userLogin;\n\n    // 2) Make api request\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/orders/myorders`, config);\n\n    // dispatch the success\n    dispatch({ type: ORDER_LIST_MY_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      // if error\n      type: ORDER_LIST_MY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    // dispatch the request\n    dispatch({ type: ORDER_LIST_REQUEST });\n\n    //get the user info\n    const { userInfo } = getState().userLogin;\n\n    // 2) Make api request\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/orders`, config);\n\n    // dispatch the success\n    dispatch({ type: ORDER_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      // if error\n      type: ORDER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useFlutterwave, closePaymentModal } from \"flutterwave-react-v3\";\nimport axios from \"axios\";\nimport { getOrderDetails, payOrder } from \"../actions/orderActions\";\nimport { ORDER_PAY_RESET } from \"../constants/orderConstants\";\n\nexport default function App({ orderId, userName, userEmail, amount }) {\n  const [flutterId, setFlutterId] = useState(\"\");\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const getPublicId = async () => {\n      const { data: publicId } = await axios.get(\"/api/config/flutterwave\");\n\n      setFlutterId(publicId);\n    };\n\n    getPublicId();\n  }, []);\n\n\n  const config = {\n    public_key: flutterId,\n    tx_ref: Date.now(),\n    amount,\n    currency: \"NGN\",\n    payment_options: \"card,mobilemoney,ussd\",\n    customer: {\n      email: userEmail,\n      phonenumber: \"\",\n      name: userName,\n    },\n    customizations: {\n      title: \"New Shop\",\n      description: \"Payment for items in cart\",\n      logo:\n        \"https://st2.depositphotos.com/4403291/7418/v/450/depositphotos_74189661-stock-illustration-online-shop-log.jpg\",\n    },\n  };\n\n  const handleFlutterPayment = useFlutterwave(config);\n\n  return (\n    <div className=\"App\">\n      <button\n        style={{\n          padding: \"0.5em 3em\",\n          border: \"0.16em solid #FFFFFF\",\n          margin: \"0 0.3em 0.3em 0\",\n          backgroundColor: \"#000\",\n          boxSizing: \"border-box\",\n          textTransform: \"uppercase\",\n          fontWeight: 400,\n          color: \"#FFFFFF\",\n          textAlign: \"center\",\n          transition: \"all 0.15s\",\n        }}\n        onClick={() => {\n          handleFlutterPayment({\n            callback: (response) => {\n              //dispatch the payment result\n              dispatch(payOrder(orderId, response));\n             \n              //dispatch refresh payOrder\n              dispatch({ type: ORDER_PAY_RESET });\n\n              closePaymentModal(); // this will close the modal programmatically\n               if (response.status === \"successful\") {\n                 window.location.reload();\n               }\n            },\n            onClose: () => {},\n          });\n        }}\n      >\n        Payment with Card\n      </button>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { ListGroup, Image, Card, Row, Col, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader.js\";\nimport { Link } from \"react-router-dom\";\nimport { getOrderDetails, deliverOrder } from \"../actions/orderActions.js\";\nimport Flutterwave from \"../components/Flutterwave\";\nimport { ORDER_DELIVER_RESET } from \"../constants/orderConstants\";\n\nconst OrderScreen = ({ match, history }) => {\n  const orderId = match.params.id;\n  const dispatch = useDispatch();\n\n  // get the order details from state\n  const { order, loading, error } = useSelector((state) => state.orderDetails);\n\n  // get the order details from state\n  const {\n    success: successPay,\n    loading: loadingPay,\n    error: errorPay,\n  } = useSelector((state) => state.orderPay);\n\n  // get the order deliver from state\n  const {\n    success: successDeliver,\n    loading: loadingDeliver,\n    error: errorDeliver,\n  } = useSelector((state) => state.orderDeliver);\n\n  //get user from state\n  const { userInfo } = useSelector((state) => state.userLogin);\n\n  // on-load of the screen fetch the order\n  useEffect(() => {\n    if(!userInfo){\n      history.push('/login')\n    }\n    dispatch(getOrderDetails(orderId));\n  }, [orderId, dispatch, successDeliver]);\n\n  // Calculate Prices\n  if (!loading) {\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2);\n    };\n\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    );\n  }\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(orderId));\n  };\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <>\n      <h1>Order {order._id}</h1>\n\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            {/* display the shipping address */}\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                {\" \"}\n                <strong>Name: </strong>\n                {order.user.name}\n              </p>\n              <p>\n                <strong>Email: </strong>\n                <a href={`mailto: ${order.user.email}`}> {order.user.email}</a>\n              </p>\n              <p>\n                <strong>Address: </strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city},{\" \"}\n                {order.shippingAddress.postalCode},{\" \"}\n                {order.shippingAddress.country},\n              </p>\n\n              {order.isDelivered ? (\n                <Message variant=\"success\">Paid on {order.deliveredAt}</Message>\n              ) : (\n                <Message variant=\"danger\">Not Delivered</Message>\n              )}\n            </ListGroup.Item>\n\n            {/* display the payment method */}\n            <ListGroup.Item>\n              <h2>Payment Method </h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\n              ) : (\n                <Message variant=\"danger\">Not Paid</Message>\n              )}\n            </ListGroup.Item>\n\n            {/* display orders */}\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message>Order is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/item.product`}>{item.name}</Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ₦{item.price} = ₦{item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <ListGroup>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>₦{order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>₦{order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>₦{order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>₦{order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay ? (\n                    <Loader />\n                  ) : (\n                    <Flutterwave\n                      successPay={successPay}\n                      userName={order.user.name}\n                      userEmail={order.user.email}\n                      amount={order.totalPrice}\n                      orderId={orderId}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n              {loadingDeliver && <Loader />}\n              {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                <ListGroup.Item>\n                  <Button\n                    className=\"btn btn-block\"\n                    type=\"button\"\n                    onClick={deliverHandler}\n                  >Mark As Delivered</Button>\n                </ListGroup.Item>\n              )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default OrderScreen;\n","import React from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav className=\"justify-content-center mb-4\">\n      {/* step 1 of checkout */}\n      <Nav.Item>\n        {step1 ? (\n          <LinkContainer to=\"/login\">\n            <Nav.Link>Sign In</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Sign In</Nav.Link>\n        )}\n      </Nav.Item>\n\n      {/* step 2 of checkout SHIPPING*/}\n      <Nav.Item>\n        {step2 ? (\n          <LinkContainer to=\"/shipping\">\n            <Nav.Link>Shipping</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Shipping</Nav.Link>\n        )}\n      </Nav.Item>\n      {/* step 3 of checkout PAYMENT */}\n      <Nav.Item>\n        {step3 ? (\n          <LinkContainer to=\"/payment\">\n            <Nav.Link>Payment</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Payment</Nav.Link>\n        )}\n      </Nav.Item>\n      {/* step 4 of checout */}\n      <Nav.Item>\n        {step4 ? (\n          <LinkContainer to=\"/placeorder\">\n            <Nav.Link>Place Order</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Place Order</Nav.Link>\n        )}\n      </Nav.Item>\n    </Nav>\n  );\n};\n\nexport default CheckoutSteps;\n","import React, { useState } from \"react\";\nimport { Form, Col, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { savePaymentMethod } from \"../actions/cartActions.js\";\nimport CheckoutSteps from \"../components/CheckoutSteps.js\";\nimport FormContainer from \"../components/FormContainer.js\";\n\nconst PaymentScreen = ({ history }) => {\n  const { shippingAddress } = useSelector((state) => state.cart);\n\n  const dispatch = useDispatch();\n\n  if (!shippingAddress) {\n    history.push(\"/shipping\");\n  }\n  const [paymentMethod, setPaymentMethod] = useState(\"flutterwave\");\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    //dispatch saveShippingAddress\n    dispatch(savePaymentMethod(paymentMethod));\n    // move to the next page\n\n    history.push(\"/placeorder\");\n  };\n\n  return (\n    <FormContainer>\n      {/* in the shipping screen , user already pass step 1 and step 2 */}\n      <CheckoutSteps step1 step2 step3 />\n\n      <h1>Payment Method</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"address\">\n          <Form.Label as=\"legend\">Select Method</Form.Label>\n          <Col>\n            <Form.Check\n              type=\"radio\"\n              label=\"Flutterwave or Credit Card\"\n              id=\"flutterwave\"\n              name=\"paymentMethod\"\n              value=\"flutterwave\"\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n\n            <Form.Check\n              type=\"radio\"\n              label=\"Paystack or Credit Card\"\n              id=\"paystack\"\n              name=\"paymentMethod\"\n              value=\"Paystack\"\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n          </Col>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default PaymentScreen;\n","import React, { useEffect } from \"react\";\nimport { ListGroup, Image, Card, Row, Col, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CheckoutSteps from \"../components/CheckoutSteps.js\";\nimport Message from \"../components/Message\";\nimport {Link} from 'react-router-dom'\nimport { createOrder } from \"../actions/orderActions.js\";\n\nconst PlaceorderScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n  const dispatch = useDispatch();\n\n  // get the order details from state\n  const { order, success, error } = useSelector((state) => state.orderCreate);\n\n  // Calculate Prices\n\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2);\n  };\n\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  );\n\n  // calculate shipping\n  cart.shippingPrice = addDecimals(cart.itemsPrice < 2000 ? 0 : 1000);\n\n  // calculate taxPrice Nigeria(.75)\n  cart.taxPrice = addDecimals(Number((0.07 * cart.itemsPrice).toFixed(2)));\n\n  // calculate the total Price\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2);\n\n  const placeOrderHandler = () => {\n    // DISPATCH CREATE ORDER ACTION\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    );\n  };\n\n  // if the order is successful\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`);\n    }\n  }, [history, success]);\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            {/* display the shipping address */}\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                {\" \"}\n                <strong>Address: </strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city},{\" \"}\n                {cart.shippingAddress.postalCode},{\" \"}\n                {cart.shippingAddress.country},\n              </p>\n            </ListGroup.Item>\n\n            {/* display the payment method */}\n            <ListGroup.Item>\n              <h2>Payment Method </h2>\n              <strong>Method: </strong>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            {/* display orders */}\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your cart is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/item.product`}>{item.name}</Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ₦{item.price} = ₦{item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <ListGroup>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>₦{cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>₦{cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>₦{cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>₦{cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                {error && <Message variant=\"danger\">{error}</Message>}\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Button\n                  type=\"button\"\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default PlaceorderScreen;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport { listProductDetails, updateProduct } from \"../actions/productActions\";\nimport Loader from \"../components/Loader.js\";\nimport FormContainer from \"../components/FormContainer\";\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id;\n\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [countInStock, setCountInStock] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n\n  const dispatch = useDispatch();\n  // get user details state\n  const { loading, error, product } = useSelector(\n    (state) => state.productDetails\n  );\n\n  // get product update state\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n    product: productUpdate,\n  } = useSelector((state) => state.productUpdate);\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET });\n\n      history.push(`/admin/productlist`);\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [dispatch, productId, product, history, successUpdate]);\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n\n    // UPDATE PRODUCT DISPATCH\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        description,\n        image,\n        countInStock,\n        category,\n        brand,\n        price,\n      })\n    );\n  };\n\n  const uploadFileHandler = async(e) =>{\n    const file = e.target.files[0]\n    const formData = new FormData()\n\n    formData.append('image', file)\n\n    setUploading(true)\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }\n\n      const {data} = await axios.post('/api/upload', formData, config)\n\n      setImage(data)\n\n      setUploading(false)\n    } catch (error) {\n      console.error(error);\n      setUploading(false)\n    }\n  }\n\n  return (\n    <>\n      <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loader />}\n\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={onSubmitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"price\">\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter Price\"\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"image\">\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Image Url\"\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n              <Form.File\n                id=\"image-file\"\n                label=\"Choose File\"\n                custom\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <Loader />}\n            </Form.Group>\n\n            <Form.Group controlId=\"description\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Description\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"brand\">\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter brand\"\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"countInStock\">\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter count In stock\"\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"category\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Category\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default ProductEditScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from \"../actions/productActions\";\nimport Loader from \"../components/Loader.js\";\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\nimport Paginate from \"../components/Paginate\";\n\nconst ProductListScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1;\n\n  const dispatch = useDispatch();\n\n  //Bring the products list into the component\n  const { loading, error, products, pages, page } = useSelector(\n    (state) => state.productList\n  );\n\n  // Bring the userLogged in into the component\n  const { userInfo } = useSelector((state) => state.userLogin);\n\n  // Bring the userLogged in into the component\n  const {\n    success: successCreate,\n    error: errorCreate,\n    loading: loadingCreate,\n    product: createdProduct,\n  } = useSelector((state) => state.productCreate);\n\n  // Bring the userLogged in into the component\n  const {\n    success: successDelete,\n    loading: loadingDelete,\n    error: errorDelete,\n  } = useSelector((state) => state.productDelete);\n\n  // onload of the screen, dispatch the listProduct Action\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET });\n\n    if (!userInfo.isAdmin) {\n      history.push(\"/login\");\n    }\n\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`);\n    } else {\n      dispatch(listProducts(\"\", pageNumber));\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createProduct,\n    pageNumber,\n    createdProduct\n  ]);\n\n  //Handler to delete a product\n  const deleteHandler = (productId) => {\n    if (window.confirm(\"Are you sure?\")) {\n      // DELETE PRODUCT\n      dispatch(deleteProduct(productId));\n    }\n  };\n\n  // Handler to create new product\n  const createProductHandler = () => {\n    // CREATE PRODUCT\n    dispatch(createProduct());\n  };\n\n  return (\n    <>\n      <Row className=\"align-items-center\">\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col className=\"text-right\">\n          <Button className=\"my-3\" onClick={createProductHandler}>\n            <i className=\"fas fa-plus\"></i> Create Product\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>BRAND</th>\n                <th></th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {products.map((product) => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>₦{product.price}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n                  <td>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant=\"light\" className=\"btn-sm\">\n                        <i className=\"fas fa-edit\" />\n                      </Button>\n                    </LinkContainer>\n                    <Button\n                      variant=\"danger\"\n                      className=\"btn-sm\"\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className=\"fas fa-trash\" />\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ProductListScreen;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Row,\n  Card,\n  Col,\n  Image,\n  ListGroup,\n  Button,\n  Form,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Rating from \"../components/Rating\";\nimport {\n  createProductReview,\n  listProductDetails,\n} from \"../actions/productActions\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\nimport Meta from \"../components/Meta\";\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const { loading, error, product } = useSelector(\n    (state) => state.productDetails\n  );\n\n  const {\n    loading: loadingProductReview,\n    error: errorProductReview,\n    success: successProductReview,\n  } = useSelector((state) => state.productCreateReview);\n\n  const { userInfo } = useSelector((state) => state.userLogin);\n\n  useEffect(() => {\n    if (successProductReview) {\n      alert(\"Review Submitted\");\n      setRating(0);\n      setComment(\"\");\n      dispatch({type: PRODUCT_CREATE_REVIEW_RESET})\n    }\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match.params.id, successProductReview]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`); //redirect them to the cart page with the id of the product as params and add qty as query string\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(createProductReview(match.params.id, { rating, comment }));\n  };\n\n  return (\n    <>\n      <Link to=\"/\" className=\"btn btn-light my-3\">\n        Go BACK\n      </Link>\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Meta  title={product.name} />\n          <Row className=\"\">\n            {/* first column to show product image */}\n\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n\n            {/* second column to show product details */}\n\n            <Col md={3}>\n              <ListGroup variant=\"flush\">\n                {/* show product name */}\n\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                {/* show rating using the Rating component */}\n\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                  />\n                </ListGroup.Item>\n\n                {/* show the price */}\n\n                <ListGroup.Item>Price: ₦{product.price}</ListGroup.Item>\n                {/* show description */}\n\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n\n            {/* Third column to display add to cart */}\n\n            <Col md={3}>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n\n                      <Col>\n                        <strong>₦{product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n\n                      <Col>\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {/* set product quantity base on what we have in stock */}\n\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col>\n                          <Form.Control\n                            value={qty}\n                            as=\"select\"\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {\" \"}\n                                  {x + 1}{\" \"}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n\n                  <ListGroup.Item>\n                    <Button\n                      onClick={addToCartHandler}\n                      className=\"btn-block\"\n                      type=\"button\"\n                      disabled={product.countInStock < 1}\n                    >\n                      Add To Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col md={6}>\n              <h2>Reviews</h2>\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\n              <ListGroup variant=\"flush\">\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n\n                <ListGroup.Item>\n                  <h2>Write a Customer Review</h2>\n                  {errorProductReview && (\n                    <Message variant=\"danger\">{errorProductReview}</Message>\n                  )}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId=\"rating\">\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=\"\">Select...</option>\n                          <option value=\"1\"> 1-Poor </option>\n                          <option value=\"2\"> 2-Fair </option>\n                          <option value=\"3\"> 3-Good </option>\n                          <option value=\"4\"> 4-Very Good </option>\n                          <option value=\"5\"> 5-Excellent </option>\n                        </Form.Control>\n                      </Form.Group>\n\n                      <Form.Group controlId=\"comment\">\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as=\"textarea\"\n                          rows=\"3\"\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button type=\"submit\" variant=\"light\">\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please <Link to=\"/login\">sign in</Link> to write a review{\" \"}\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ProductScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Form, Row, Col, Button, Table } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\nimport Loader from \"../components/Loader.js\";\nimport { listMyOrders } from \"../actions/orderActions\";\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n  const { loading, error, user } = useSelector((state) => state.userDetails);\n\n  // check if the user is Logged in\n\n  const { userInfo } = useSelector((state) => state.userLogin);\n\n  // get the user update profile from state\n  const { success } = useSelector((state) => state.userUpdateProfile);\n\n  // get the user order list from state\n  const { orders, loading: loadingOrders, error: errorOrders } = useSelector(\n    (state) => state.orderListMy\n  );\n\n  //check if the user is already loggedIn\n  useEffect(() => {\n    //check if the user is loggedIn\n    if (!userInfo) {\n      history.push(\"/login\"); // if not logged in, redirect to login\n    } else {\n      //check if the user details is NOT available, IF not, dispatch getUserDetails\n      if (!user.name) {\n        // dispatch getting the users details when page load\n        dispatch(getUserDetails(\"profile\"));\n\n        //dispatch getting the users Orders\n        dispatch(listMyOrders());\n      } else {\n        //if we have the userDetails, set the name, email in the text fields\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [history, userInfo, dispatch, user]);\n\n  // submit handler\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n\n    //check if password match\n    if (password !== confirmPassword) {\n      setMessage(\"Password do not match\");\n    } else {\n      // DISPATCH UPDATE PROFILE\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\n    }\n  };\n\n  //   console.log(user.name)\n  return (\n    <Row>\n      <Col md={3}>\n        {\" \"}\n        <h2>User Profile</h2>\n        {message && <Message variant=\"danger\">{message}</Message>}\n        {error && <Message variant=\"danger\">{error}</Message>}\n        {success && <Message variant=\"success\">Profile Updated</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={onSubmitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"confirmPassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type=\"submit\" variant=\"primary\">\n            Update\n          </Button>\n        </Form>\n      </Col>\n      {/* Display my orders */}\n      <Col md={9}>\n        <h2>My Order</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Table striped bordered responsive hover className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }} />\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }} />\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className='btn-sm' variant=\"light\">Details</Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  );\n};\n\nexport default ProfileScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport { register } from \"../actions/userActions\";\nimport Loader from \"../components/Loader.js\";\nimport FormContainer from \"../components/FormContainer\";\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n  const { loading, error, userInfo } = useSelector(\n    (state) => state.userRegister\n  );\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  //check if the user is already loggedIn\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, redirect, userInfo]);\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n\n    //check if password match\n    if (password !== confirmPassword) {\n      setMessage(\"Password do not match\");\n    } else {\n      // DISPATCH REGISTER\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {message && <Message variant=\"danger\">{message}</Message>}\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={onSubmitHandler}>\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter Name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"confirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Sign In\n        </Button>\n      </Form>\n\n      <Row className=\"py-3\">\n        <Col>\n          Have an Account?{\" \"}\n          <Link to={redirect ? `/login?redirect={redirect}` : \"/login\"}>\n            Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default RegisterScreen;\n","import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { saveShippingAddress } from \"../actions/cartActions.js\";\nimport CheckoutSteps from \"../components/CheckoutSteps.js\";\nimport FormContainer from \"../components/FormContainer.js\";\n\n\nconst ShippingScreen = ({ history }) => {\n  const { shippingAddress } = useSelector((state) => state.cart);\n  console.log(shippingAddress);\n\n  const dispatch = useDispatch();\n\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    //dispatch saveShippingAddress\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\n    // move to the next page\n\n    history.push(\"/payment\");\n  };\n\n  return (\n    <FormContainer>\n      {/* in the shipping screen , user already pass step 1 and step 2 */}\n      <CheckoutSteps step1 step2 />\n\n      <h1>Shpping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"address\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter Address\"\n            value={address}\n            required\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"address\">\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter City\"\n            value={city}\n            required\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"address\">\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter Postal Code\"\n            value={postalCode}\n            required\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"country\">\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter Country\"\n            value={country}\n            required\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default ShippingScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\nimport Loader from \"../components/Loader.js\";\nimport FormContainer from \"../components/FormContainer\";\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id;\n\n  const [name, setName] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [email, setEmail] = useState(\"\");\n\n  const dispatch = useDispatch();\n  // get user details state\n  const { loading, error, user } = useSelector((state) => state.userDetails);\n  //get the user update success state\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = useSelector((state) => state.userUpdate);\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET });\n\n      history.push(\"/admin/userList\");\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [dispatch, userId, user, history, successUpdate]);\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\n  };\n\n  return (\n    <>\n      <Link to=\"admin/userList\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={onSubmitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter Email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"isadmin\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Is Admin\"\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default UserEditScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport { deleteUser, listUsers } from \"../actions/userActions\";\nimport Loader from \"../components/Loader.js\";\n\nconst UserListScreen = ({ history }) => {\n  const dispatch = useDispatch();\n\n  //Bring the user list into the component\n  const { loading, error, users } = useSelector((state) => state.userList);\n\n  // Bring the userLogged in into the component\n  const { userInfo } = useSelector((state) => state.userLogin);\n\n  // Bring the userLogged in into the component\n  const { success: successDelete } = useSelector((state) => state.userDelete);\n\n  // onload of the screen, dispatch the listUser Action\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers());\n    } else {\n      history.push(\"/login\");\n    }\n  }, [dispatch, history, successDelete, userInfo]);\n\n  //Handler to delete a user\n  const deleteHandler = (userId) => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteUser(userId));\n    }\n  };\n\n  return (\n    <>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto: ${user.email}`}>{user.email}</a>\n                </td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }} />\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }} />\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      <i className=\"fas fa-edit\" />\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant=\"danger\"\n                    className=\"btn-sm\"\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className=\"fas fa-trash\" />\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n\nexport default UserListScreen;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport CartScreen from \"./screens/CartScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport OrderListScreen from \"./screens/OrderListScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\nimport PaymentScreen from \"./screens/paymentScreen\";\nimport PlaceorderScreen from \"./screens/PlaceorderScreen\";\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\nimport ProductListScreen from \"./screens/ProductListScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport UserEditScreen from \"./screens/UserEditScreen\";\nimport UserListScreen from \"./screens/UserListScreen\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path=\"/admin/userlist\" component={UserListScreen} />\n          <Route path=\"/admin/orderlist\" component={OrderListScreen} />\n          <Route path=\"/admin/productlist\" exact component={ProductListScreen} />\n          <Route path=\"/admin/productlist/:pageNumber\" exact component={ProductListScreen} />\n          <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n          <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\n          <Route path=\"/shipping\" component={ShippingScreen} />\n          <Route path=\"/payment\" component={PaymentScreen} />\n          <Route path=\"/placeorder\" component={PlaceorderScreen} />\n          <Route path=\"/login\" exact component={LoginScreen} />\n          <Route path=\"/register\" exact component={RegisterScreen} />\n          <Route path=\"/profile\" exact component={ProfileScreen} />\n          <Route path=\"/product/:id\" exact component={ProductScreen} />\n          <Route path=\"/order/:id\" exact component={OrderScreen} />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          <Route path=\"/search/:keyword\" exact component={HomeScreen} />\n          <Route path=\"/page/:pageNumber\" component={HomeScreen} />\n          <Route\n            path=\"/search/:keyword/page/:pageNumber\"\n            component={HomeScreen}\n          />\n          <Route path=\"/\" exact component={HomeScreen} />\n        </Container>\n      </main>\n\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","import { combineReducers, createStore, applyMiddleware } from \"redux\";\n\nimport thunk from \"redux-thunk\";\n\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  productCreateReducer,\n  productCreateReviewReducer,\n  productDeleteReducer,\n  productDetailsReducer,\n  productListReducer,\n  productTopRatedReducer,\n  productUpdateReducer,\n} from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport {\n  userDeleteReducer,\n  userDetailsReducer,\n  userListReducer,\n  userLoginReducer,\n  userRegisterReducer,\n  userUpdateProfileReducer,\n  userUpdateReducer,\n} from \"./reducers/userReducers\";\nimport {\n  orderCreateReducer,\n  orderDeliverReducer,\n  orderDetailsReducer,\n  orderListMyReducer,\n  orderListReducer,\n  orderPayReducer,\n} from \"./reducers/orderReducers\";\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  orderList: orderListReducer,\n  orderDeliver: orderDeliverReducer,\n  productCreateReview: productCreateReviewReducer,\n  productTopRated: productTopRatedReducer\n});\n\n// get cartItems from localStroage\n\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\n// get User from localStorage\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\n// get shipping address from localStorage\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n  : {};\n\n// get payment method from localStorage\nconst paymentMethodFromStorage = localStorage.getItem(\"paymentMethod\")\n  ? JSON.parse(localStorage.getItem(\"paymentMethod\"))\n  : {};\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n    paymentMethod: paymentMethodFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;\n","import {\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_TOP_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_UPDATE_SUCCESS,\n} from \"../constants/productConstants\";\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] };\n\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload.products,\n        pages: action.payload.pages,\n        page: action.payload.page,\n      };\n\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { loading: true, ...state };\n\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload };\n\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const productDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return { loading: true };\n\n    case PRODUCT_DELETE_SUCCESS:\n      return { loading: false, success: true };\n\n    case PRODUCT_DELETE_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return { loading: true };\n\n    case PRODUCT_CREATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload };\n\n    case PRODUCT_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_CREATE_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return { loading: true };\n\n    case PRODUCT_UPDATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload };\n\n    case PRODUCT_UPDATE_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} };\n\n    default:\n      return state;\n  }\n};\n\nexport const productCreateReviewReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return { loading: true };\n\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return { loading: false, success: true };\n\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return { product: {} };\n\n    default:\n      return state;\n  }\n};\n\n\nexport const productTopRatedReducer = (state = {products: []}, action) => {\n  switch (action.type) {\n    case PRODUCT_TOP_REQUEST:\n      return { loading: true };\n\n    case PRODUCT_TOP_SUCCESS:\n      return { loading: false, products: action.payload };\n\n    case PRODUCT_TOP_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_SAVE_SHIPPING_ADDRESS,\n} from \"../constants/cartConstants\";\n\nexport const cartReducer = (\n  state = { cartItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n\n      // check if the product exist\n      const existItem = state.cartItems.find((x) => x.product === item.product);\n\n      // if it exist\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        };\n      } else {\n        // else add the item to the cartItems\n        return {\n          ...state,\n\n          cartItems: [...state.cartItems, item],\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      };\n\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      };\n\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_RESET,\n  USER_DETAILS_RESET,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_RESET,\n} from \"../constants/userConstants\";\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload };\n\n    case USER_LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { loading: true, ...state };\n\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload };\n\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_DETAILS_RESET:\n      return { user: {} };\n\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true };\n\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, success: true, userInfo: action.payload };\n\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_UPDATE_PROFILE_RESET:\n    default:\n      return state;\n  }\n};\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true };\n\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload };\n\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LIST_RESET:\n      return { users: [] };\n\n    default:\n      return state;\n  }\n};\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true };\n\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true };\n\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true };\n\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, success: true };\n\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_UPDATE_RESET:\n      return { user: {} };\n    default:\n      return state;\n  }\n};\n","import {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_RESET,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_RESET,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_RESET,\n  ORDER_LIST_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_RESET,\n  ORDER_PAY_SUCCESS,\n} from \"../constants/orderConstants\";\n\nexport const orderCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return { loading: true };\n    case ORDER_CREATE_SUCCESS:\n      return { loading: false, success: true, order: action.payload };\n    case ORDER_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const orderDetailsReducer = (\n  state = { loading: true, order: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return { loading: true, ...state };\n    case ORDER_DETAILS_SUCCESS:\n      return { loading: false, order: action.payload };\n    case ORDER_DETAILS_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return { loading: true };\n    case ORDER_PAY_SUCCESS:\n      return { loading: false, success: true };\n    case ORDER_PAY_FAIL:\n      return { loading: false, error: action.payload };\n\n    case ORDER_PAY_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_MY_REQUEST:\n      return { loading: true };\n    case ORDER_LIST_MY_SUCCESS:\n      return { loading: false, orders: action.payload };\n    case ORDER_LIST_MY_FAIL:\n      return { loading: false, error: action.payload };\n    case ORDER_LIST_MY_RESET:\n      return { orders: [] };\n\n    default:\n      return state;\n  }\n};\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return { loading: true };\n    case ORDER_LIST_SUCCESS:\n      return { loading: false, orders: action.payload };\n    case ORDER_LIST_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return { loading: true };\n    case ORDER_DELIVER_SUCCESS:\n      return { loading: false, success: true };\n    case ORDER_DELIVER_FAIL:\n      return { loading: false, error: action.payload };\n    case ORDER_DELIVER_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./bootstrap.min.css\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}